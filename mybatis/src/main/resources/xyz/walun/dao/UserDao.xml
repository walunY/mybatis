<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="xyz.walun.dao.UserDao">
    <resultMap id="userMap" type="xyz.walun.domain.User">
        <id property="userId" column="id"/>
        <result property="userAddress" column="address"/>
        <result property="userName" column="username"/>
        <result property="userSex" column="sex"/>
        <result property="userBirthday" column="birthday"/>
    </resultMap>
    <select id="findAll" resultMap="userMap">
        SELECT * FROM user;
    </select>
    <insert id="saveUser" parameterType="xyz.walun.domain.User">
        INSERT INTO user(username,address,sex,birthday) VALUES (#{userName},#{userAddress},#{userSex},#{userBirthday});
       <!-- 配置插入操作后，获取插入数据的id -->
        <!--       数据库所在的列     bean对象的属性    返回的类型       什么时候执行        -->
        <selectKey keyColumn="id" keyProperty="userId" resultType="Int" order="AFTER">
            SELECT last_insert_id();
        </selectKey>
    </insert>
    <update id="updateUser" parameterType="xyz.walun.domain.User">
        UPDATE user set username=#{userName},address=#{userAddress},sex=#{userSex} WHERE id=#{userId};
    </update>
    <delete id="deleteUser" parameterType="Integer">
        DELETE from user where id = #{uid}
    </delete>
    <select id="findById" parameterType="Int" resultMap="userMap">
        SELECT * from user WHERE id =#{uid};
    </select>
    <select id="findByName" parameterType="String" resultMap="userMap">
        SELECT * from user where username like #{uname}
        <!-- SELECT * from user where username like '${value}'第二种方式-->
    </select>
    <select id="findTotal" resultType="Int">
        SELECT COUNT(id) from user;
    </select>
    <!-- 根据queryvo的条件查询用户 OGNL表达式 传入的是QueryVo对象，其中只有一个user属性，所以要是用user.username这样的OGNL表达式获取值-->
    <select id="findUserByVo" resultMap="userMap" parameterType="xyz.walun.domain.QueryVo">
        SELECT * from user where username like #{user.userName};
    </select>

    <select id="findUserByCondition" parameterType="xyz.walun.domain.User" resultMap="userMap">
        SELECT * FROM user
        <where>
            <if test="userName !=null">
                and username =#{userName}
            </if>
            <if test="userSex != null">
                and sex = #{userSex}
            </if>
        </where>
    </select>
    <select id="findUserByids" parameterType="xyz.walun.domain.QueryVo" resultMap="userMap">
        SELECT * from user
        <where>
            <if test="ids != null and ids.size()>0">
            <foreach collection="ids" open="and id in (" close=")" item="uid" separator=",">
                #{uid}
            </foreach>
            </if>
        </where>
    </select>
    <!-- 数据库列名和实体类名相同！不需要特殊映射 -->
 <!--   <select id="findAll" resultType="xyz.walun.domain.User">
        SELECT * FROM user;
    </select>
    <insert id="saveUser" parameterType="xyz.walun.domain.User">
        INSERT INTO user(username,address,sex,birthday) VALUES (#{username},#{address},#{sex},#{birthday});
       &lt;!&ndash; 配置插入操作后，获取插入数据的id &ndash;&gt;
        &lt;!&ndash;       数据库所在的列     bean对象的属性    返回的类型       什么时候执行        &ndash;&gt;
        <selectKey keyColumn="id" keyProperty="id" resultType="Int" order="AFTER">
            SELECT last_insert_id();
        </selectKey>
    </insert>
    <update id="updateUser" parameterType="xyz.walun.domain.User">
        UPDATE user set username=#{username},address=#{address},sex=#{sex} WHERE id=#{id};
    </update>
    <delete id="deleteUser" parameterType="Integer">
        DELETE from user where id = #{uid}
    </delete>
    <select id="findById" parameterType="Int" resultType="xyz.walun.domain.User">
        SELECT * from user WHERE id =#{uid};
    </select>
    <select id="findByName" parameterType="String" resultType="xyz.walun.domain.User">
        SELECT * from user where username like #{uname}
        &lt;!&ndash; SELECT * from user where username like '${value}'第二种方式&ndash;&gt;
    </select>
    <select id="findTotal" resultType="Int">
        SELECT COUNT(id) from user;
    </select>
    &lt;!&ndash; 根据queryvo的条件查询用户 OGNL表达式 传入的是QueryVo对象，其中只有一个user属性，所以要是用user.username这样的OGNL表达式获取值&ndash;&gt;
    <select id="findUserByVo" resultType="xyz.walun.domain.User" parameterType="xyz.walun.domain.QueryVo">
        SELECT * from user where username like #{user.username};
    </select>-->
</mapper>